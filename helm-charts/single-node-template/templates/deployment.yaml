apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.app }}
  name: {{ .Values.app }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
    spec:
      containers:
        - name: {{ .Values.app }}-node
          image: andskur/substrate:latest
          volumeMounts:
            - name: chainspec-volume
              mountPath: /etc/config
            - name: nodekey-volume
              mountPath: /keys
            - name: chain-storage
              mountPath: /data
          ports:
            - containerPort: 30333
              name: p2p
            - containerPort: 9933
              name: rpc
            - containerPort: 9944
              name: ws
          args:
            - --name
            - {{ .Values.app }}
            - --base-path
            - "/data"
            - --chain
            - /etc/config/chainspec
            - --node-key-file
            - /keys/nodekey
            - --port
            - "30333"
            - --ws-port
            - "9944"
            - --rpc-port
            - "9933"
            - --rpc-cors
            - all
            - --validator
            - --unsafe-rpc-external
            - --unsafe-ws-external
          readinessProbe:
            httpGet:
              path: /health
              port: http-rpc
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http-rpc
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: chainspec-volume
          configMap:
            name: {{ .Release.Name }}-chainspec
            items:
              - key: chainSpecRaw.json
                path: chainspec
        - name: nodekey-volume
          secret:
            secretName: {{ .Values.app }}-keys
            items:
              - key: KEY_P2P
                path: nodekey
      - name: nodekey-volume
        secret:
          secretName: {{ .Values.app }}-p2p
          items:
            - key: node.key
              path: nodekey
       - name: chain-storage
         persistentVolumeClaim:
           claimName: {{ .Values.app }}-claim

      securityContext:
        runAsUser: 1000
        fsGroup: 1000